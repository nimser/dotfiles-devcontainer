#Theme
import:
  - ~/.config/alacritty/catppuccin/catppuccin-mocha.yml
# Colors (Tomorrow Night Bright)
# Rest defined in Theme above
#colors:
#  # Default colors
#  primary:
#    background: '0x000000'
#    foreground: '0xeaeaea'
env:
  # Important: for TrueColors, do this here, not in the shell (e.g. fish)
  TERM: xterm-256color
scrolling:
  # Maximum number of lines in the scrollback buffer.
  # Specifying '0' will disable scrolling.
  history: 10000

  # Number of lines the viewport will move for every line scrolled when
  # scrollback is enabled (history > 0).
  multiplier: 3

# Font config - use `fc-cache -v` after change and `fc-list` to find font name
font:
  # Normal (roman) font face
  normal:
    family: Hack Nerd Font
    style: Regular

  # Bold font face
  bold:
    family: Hack Nerd Font
    style: Bold

  # Italic font face
  italic:
    family: Hack Nerd Font
    style: Italic

  # Point size
  size: 12.0

# If `true`, bold text is drawn using the bright color variants.
draw_bold_text_with_bright_colors: true

# Visual Bell
# Specifying a `duration` of `0` will disable the visual bell.
bell:
  animation: EaseOutExpo
  duration: 10

# Background opacity
window.opacity: 0.6

# Mouse bindings
mouse_bindings:
  - { mouse: Middle, action: PasteSelection }

mouse:
  # Click settings
  # The `double_click` and `triple_click` settings control the time
  # alacritty should wait for accepting multiple clicks as one double
  # or triple click.
  double_click: { threshold: 300 }
  triple_click: { threshold: 300 }

  # If this is `true`, the cursor is temporarily hidden when typing.
  hide_when_typing: false


selection:
  semantic_escape_chars: ",â”‚`|:\"' ()[]{}<>"

  # When set to `true`, selected text will be copied to both the primary and
  # the selection clipboard. Otherwise, it will only be copied to the selection
  # clipboard.
  save_to_clipboard: true

terminal:
  osc52: "notify"

window.dynamic_title: true

cursor:
  style: Block
  # If `true`, the cursor will be rendered as a hollow box when the
  # window is not focused.
  unfocused_hollow: true

# Live config reload (changes require restart)
live_config_reload: true

# Shell
#
# You can set `shell.program` to the path of your favorite shell, e.g. `/bin/fish`.
# Entries in `shell.args` are passed unmodified as arguments to the shell.
#shell:
#  program: /bin/bash
#  args:
#    - --login

# Key bindings
#   A full list with available key codes can be found here:
#   https://docs.rs/glutin/*/glutin/enum.VirtualKeyCode.html#variants
#
#   Instead of using the name of the keys, the `key` field also supports using
#   the scancode of the desired key. Scancodes have to be specified as a
#   decimal number.
#   This command will allow you to display the hex scancodes for certain keys:
#     `showkey --scancodes`
#
# Values for `mods`:
#   - Command
#   - Control
#   - Shift
#   - Alt
#
#   Multiple `mods` can be combined using `|` like this: `mods: Control|Shift`.
#   Whitespace and capitalization is relevant and must match the example.
#
# Values for `chars`:
#   The `chars` field writes the specified string to the terminal. This makes
#   it possible to pass escape sequences.
#   To find escape codes for bindings like `PageUp` ("\x1b[5~"), you can run
#   the command `showkey -a` outside of tmux.
#   Note that applications use terminfo to map escape sequences back to
#   keys. It is therefore required to update the terminfo when
#   changing an escape sequence.
#
# Values for `action`:
#   - Paste
#   - PasteSelection
#   - Copy
#   - IncreaseFontSize
#   - DecreaseFontSize
#   - ResetFontSize
#   - ScrollPageUp
#   - ScrollPageDown
#   - ScrollToTop
#   - ScrollToBottom
#   - ClearHistory
#   - Hide
#   - Quit
#
# Values for `command`:
#   The `command` field must be a map containing a `program` string and
#   an `args` array of command line parameter strings.
#
#   Example:
#       `command: { program: "alacritty", args: ["-e", "vttest"] }`
#
# Values for `mode`:
#   - ~AppCursor
#   - AppCursor
#   - ~AppKeypad
#   - AppKeypad
key_bindings:
  - { key: V,        mods: Control|Shift,    action: Paste               }
  - { key: C,        mods: Control|Shift,    action: Copy                }
  - { key: Key0,     mods: Control, action: ResetFontSize                }
  - { key: NumpadAdd, mods: Control, action: IncreaseFontSize             }
  - { key: NumpadSubtract, mods: Control, action: DecreaseFontSize             }
